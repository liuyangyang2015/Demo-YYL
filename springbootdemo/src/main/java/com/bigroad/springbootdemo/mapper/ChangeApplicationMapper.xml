<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bigroad.springbootdemo.dao.ChangeApplicationMapper" >
  <resultMap id="BaseResultMap" type="com.bigroad.springbootdemo.domain.ChangeApplication" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="applicant_id" property="applicantId" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="cost_money" property="costMoney" jdbcType="DECIMAL" />
    <result column="solver" property="solver" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="ticket_channel" property="ticketChannel" jdbcType="TINYINT" />
    <result column="apply_status" property="applyStatus" jdbcType="TINYINT" />
    <result column="finance_back_id" property="financeBackId" jdbcType="INTEGER" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="reject_reason" property="rejectReason" jdbcType="VARCHAR" />
    <result column="refund_agreement_id" property="refundAgreementId" jdbcType="INTEGER" />
    <result column="bank_of_deposit" property="bankOfDeposit" jdbcType="VARCHAR" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="card_number" property="cardNumber" jdbcType="VARCHAR" />
    <result column="expect_payment_date" property="expectPaymentDate" jdbcType="DATE" />
    <result column="operate_date" property="operateDate" jdbcType="TIMESTAMP" />
    <result column="operate_account" property="operateAccount" jdbcType="INTEGER" />
    <result column="record_time" property="recordTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="application_id" property="applicationId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, applicant_id, money, cost_money, solver, type, ticket_channel, apply_status, 
    finance_back_id, reason, reject_reason, refund_agreement_id, bank_of_deposit, bank_account, 
    card_number, expect_payment_date, operate_date, operate_account, record_time, update_time, 
    application_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bigroad.springbootdemo.domain.ChangeApplicationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from finance_change_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from finance_change_application
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from finance_change_application
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bigroad.springbootdemo.domain.ChangeApplicationExample" >
    delete from finance_change_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bigroad.springbootdemo.domain.ChangeApplication" >
    insert into finance_change_application (id, order_id, applicant_id, 
      money, cost_money, solver, 
      type, ticket_channel, apply_status, 
      finance_back_id, reason, reject_reason, 
      refund_agreement_id, bank_of_deposit, bank_account, 
      card_number, expect_payment_date, operate_date, 
      operate_account, record_time, update_time, 
      application_id)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{applicantId,jdbcType=INTEGER}, 
      #{money,jdbcType=DECIMAL}, #{costMoney,jdbcType=DECIMAL}, #{solver,jdbcType=TINYINT}, 
      #{type,jdbcType=TINYINT}, #{ticketChannel,jdbcType=TINYINT}, #{applyStatus,jdbcType=TINYINT}, 
      #{financeBackId,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, #{rejectReason,jdbcType=VARCHAR}, 
      #{refundAgreementId,jdbcType=INTEGER}, #{bankOfDeposit,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, 
      #{cardNumber,jdbcType=VARCHAR}, #{expectPaymentDate,jdbcType=DATE}, #{operateDate,jdbcType=TIMESTAMP}, 
      #{operateAccount,jdbcType=INTEGER}, #{recordTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{applicationId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bigroad.springbootdemo.domain.ChangeApplication" >
    insert into finance_change_application
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="applicantId != null" >
        applicant_id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="costMoney != null" >
        cost_money,
      </if>
      <if test="solver != null" >
        solver,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="ticketChannel != null" >
        ticket_channel,
      </if>
      <if test="applyStatus != null" >
        apply_status,
      </if>
      <if test="financeBackId != null" >
        finance_back_id,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="rejectReason != null" >
        reject_reason,
      </if>
      <if test="refundAgreementId != null" >
        refund_agreement_id,
      </if>
      <if test="bankOfDeposit != null" >
        bank_of_deposit,
      </if>
      <if test="bankAccount != null" >
        bank_account,
      </if>
      <if test="cardNumber != null" >
        card_number,
      </if>
      <if test="expectPaymentDate != null" >
        expect_payment_date,
      </if>
      <if test="operateDate != null" >
        operate_date,
      </if>
      <if test="operateAccount != null" >
        operate_account,
      </if>
      <if test="recordTime != null" >
        record_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="applicationId != null" >
        application_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="applicantId != null" >
        #{applicantId,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="costMoney != null" >
        #{costMoney,jdbcType=DECIMAL},
      </if>
      <if test="solver != null" >
        #{solver,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="ticketChannel != null" >
        #{ticketChannel,jdbcType=TINYINT},
      </if>
      <if test="applyStatus != null" >
        #{applyStatus,jdbcType=TINYINT},
      </if>
      <if test="financeBackId != null" >
        #{financeBackId,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null" >
        #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="refundAgreementId != null" >
        #{refundAgreementId,jdbcType=INTEGER},
      </if>
      <if test="bankOfDeposit != null" >
        #{bankOfDeposit,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null" >
        #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="expectPaymentDate != null" >
        #{expectPaymentDate,jdbcType=DATE},
      </if>
      <if test="operateDate != null" >
        #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operateAccount != null" >
        #{operateAccount,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null" >
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applicationId != null" >
        #{applicationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bigroad.springbootdemo.domain.ChangeApplicationExample" resultType="java.lang.Integer" >
    select count(*) from finance_change_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update finance_change_application
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.applicantId != null" >
        applicant_id = #{record.applicantId,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.costMoney != null" >
        cost_money = #{record.costMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.solver != null" >
        solver = #{record.solver,jdbcType=TINYINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.ticketChannel != null" >
        ticket_channel = #{record.ticketChannel,jdbcType=TINYINT},
      </if>
      <if test="record.applyStatus != null" >
        apply_status = #{record.applyStatus,jdbcType=TINYINT},
      </if>
      <if test="record.financeBackId != null" >
        finance_back_id = #{record.financeBackId,jdbcType=INTEGER},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectReason != null" >
        reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="record.refundAgreementId != null" >
        refund_agreement_id = #{record.refundAgreementId,jdbcType=INTEGER},
      </if>
      <if test="record.bankOfDeposit != null" >
        bank_of_deposit = #{record.bankOfDeposit,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null" >
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNumber != null" >
        card_number = #{record.cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.expectPaymentDate != null" >
        expect_payment_date = #{record.expectPaymentDate,jdbcType=DATE},
      </if>
      <if test="record.operateDate != null" >
        operate_date = #{record.operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operateAccount != null" >
        operate_account = #{record.operateAccount,jdbcType=INTEGER},
      </if>
      <if test="record.recordTime != null" >
        record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.applicationId != null" >
        application_id = #{record.applicationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update finance_change_application
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      applicant_id = #{record.applicantId,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      cost_money = #{record.costMoney,jdbcType=DECIMAL},
      solver = #{record.solver,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      ticket_channel = #{record.ticketChannel,jdbcType=TINYINT},
      apply_status = #{record.applyStatus,jdbcType=TINYINT},
      finance_back_id = #{record.financeBackId,jdbcType=INTEGER},
      reason = #{record.reason,jdbcType=VARCHAR},
      reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      refund_agreement_id = #{record.refundAgreementId,jdbcType=INTEGER},
      bank_of_deposit = #{record.bankOfDeposit,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      card_number = #{record.cardNumber,jdbcType=VARCHAR},
      expect_payment_date = #{record.expectPaymentDate,jdbcType=DATE},
      operate_date = #{record.operateDate,jdbcType=TIMESTAMP},
      operate_account = #{record.operateAccount,jdbcType=INTEGER},
      record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      application_id = #{record.applicationId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bigroad.springbootdemo.domain.ChangeApplication" >
    update finance_change_application
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="applicantId != null" >
        applicant_id = #{applicantId,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="costMoney != null" >
        cost_money = #{costMoney,jdbcType=DECIMAL},
      </if>
      <if test="solver != null" >
        solver = #{solver,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="ticketChannel != null" >
        ticket_channel = #{ticketChannel,jdbcType=TINYINT},
      </if>
      <if test="applyStatus != null" >
        apply_status = #{applyStatus,jdbcType=TINYINT},
      </if>
      <if test="financeBackId != null" >
        finance_back_id = #{financeBackId,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null" >
        reject_reason = #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="refundAgreementId != null" >
        refund_agreement_id = #{refundAgreementId,jdbcType=INTEGER},
      </if>
      <if test="bankOfDeposit != null" >
        bank_of_deposit = #{bankOfDeposit,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null" >
        card_number = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="expectPaymentDate != null" >
        expect_payment_date = #{expectPaymentDate,jdbcType=DATE},
      </if>
      <if test="operateDate != null" >
        operate_date = #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operateAccount != null" >
        operate_account = #{operateAccount,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null" >
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applicationId != null" >
        application_id = #{applicationId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bigroad.springbootdemo.domain.ChangeApplication" >
    update finance_change_application
    set order_id = #{orderId,jdbcType=INTEGER},
      applicant_id = #{applicantId,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      cost_money = #{costMoney,jdbcType=DECIMAL},
      solver = #{solver,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      ticket_channel = #{ticketChannel,jdbcType=TINYINT},
      apply_status = #{applyStatus,jdbcType=TINYINT},
      finance_back_id = #{financeBackId,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      reject_reason = #{rejectReason,jdbcType=VARCHAR},
      refund_agreement_id = #{refundAgreementId,jdbcType=INTEGER},
      bank_of_deposit = #{bankOfDeposit,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      card_number = #{cardNumber,jdbcType=VARCHAR},
      expect_payment_date = #{expectPaymentDate,jdbcType=DATE},
      operate_date = #{operateDate,jdbcType=TIMESTAMP},
      operate_account = #{operateAccount,jdbcType=INTEGER},
      record_time = #{recordTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      application_id = #{applicationId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>